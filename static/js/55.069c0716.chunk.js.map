{"version":3,"file":"static/js/55.069c0716.chunk.js","mappings":"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","sources":["components/Sidebar/Sidebar.jsx","components/UI/Breadcrumb.jsx","components/ScenarioPlanning/ScenarioModelsTable.jsx","pages/ScenarioPlanning.jsx"],"sourcesContent":["import \"./Sidebar.css\"\r\nimport { Tooltip } from 'react-tooltip'\r\nimport { AiOutlineSearch } from \"react-icons/ai\"\r\nimport { Fragment } from \"react\"\r\n\r\nconst Sidebar = (props) => {\r\n    const {gridVisibility} = props;\r\n\r\n    return (\r\n        <div className=\"sidebar fixed h-screen\">\r\n            <div>\r\n                <img className=\"logo mb-8 block mx-auto\" src={props.logo} alt=\"product logo\" />\r\n                <div className=\"searchField flex justify-center items-center relative mb-4\">\r\n                    <AiOutlineSearch />\r\n                    <input className=\"font-medium\" id=\"search\" type=\"text\" placeholder=\"Search\" />\r\n                </div>\r\n                {props.screenIcon && <div className=\"navLink flex justify-center items-center mb-2\"><img src={props.screenIcon} alt=\"icons\" /></div>}\r\n                {props.comparatorAndGant && (\r\n                    <Fragment>\r\n                        <button onClick={()=>gridVisibility(true)} className=\"navLink flex justify-center items-center mb-2 w-full\" data-tooltip-id=\"sidebarTooltip\" data-tooltip-content=\"Table View\"><img src={`${process.env.PUBLIC_URL}/images/icons/table_icon.svg`} alt=\"table\" /></button>\r\n                        <button onClick={()=>gridVisibility(false)} className=\"navLink flex justify-center items-center mb-2 w-full\" data-tooltip-id=\"sidebarTooltip\" data-tooltip-content=\"Gantt Chart\"><img src={`${process.env.PUBLIC_URL}/images/icons/gantt_icon.svg`} alt=\"gantt\" /></button>\r\n                    </Fragment>\r\n                )}\r\n            </div>\r\n            <ul className=\"flex flex-wrap flex-col m-0 list-none items-center pt-5 relative\">        \r\n                <li>\r\n                    <button data-tooltip-id=\"sidebarTooltip\" data-tooltip-content=\"Information\" id=\"headernavbtn\">\r\n                        <img src={`${process.env.PUBLIC_URL}/images/icons/sidebar/rocket.svg`} alt=\"rocket\" />\r\n                    </button>\r\n                </li>\r\n                <li>\r\n                    <button data-tooltip-id=\"sidebarTooltip\" data-tooltip-content=\"Notification\">\r\n                        <img src={`${process.env.PUBLIC_URL}/images/icons/sidebar/noti.svg`} alt=\"notification\" />\r\n                    </button>\r\n                </li>\r\n                <li>\r\n                    <button data-tooltip-id=\"sidebarTooltip\" data-tooltip-content=\"Mails\">\r\n                        <img src={`${process.env.PUBLIC_URL}/images/icons/sidebar/env.svg`} alt=\"envelope\" />\r\n                    </button>\r\n                </li>\r\n                <li className=\"items-group relative\">\r\n                    <a href=\"apps.html\" id=\"apps\" title=\"Apps\">\r\n                        <img src={`${process.env.PUBLIC_URL}/images/icons/sidebar/apps.svg`} alt=\"Apps\" />\r\n                    </a>\r\n                    <div className=\"absolute\">\r\n                        <a href=\"/\" data-tooltip-id=\"sidebarTooltip\" data-tooltip-content=\"Mavryck\">\r\n                            <img src={`${process.env.PUBLIC_URL}/images/logo.png`} alt=\"Mavryck\" />\r\n                        </a>\r\n                        <a href=\"/\" data-tooltip-id=\"sidebarTooltip\" data-tooltip-content=\"Calendar\">\r\n                            <img src={`${process.env.PUBLIC_URL}/images/products/calendar.svg`} alt=\"calendar\" />\r\n                        </a>\r\n                        <a href=\"/\" data-tooltip-id=\"sidebarTooltip\" data-tooltip-content=\"VivClima\">\r\n                            <img src={`${process.env.PUBLIC_URL}/images/products/vivclima.svg`} alt=\"vivclima\" />\r\n                        </a>\r\n                        <a href=\"/\" data-tooltip-id=\"sidebarTooltip\" data-tooltip-content=\"Project Manager\">\r\n                            <img src={`${process.env.PUBLIC_URL}/images/products/projectManager.svg`} alt=\"project manager\" />\r\n                        </a>\r\n                        <a href=\"/\" data-tooltip-id=\"sidebarTooltip\" data-tooltip-content=\"Computer Vision\">\r\n                            <img src={`${process.env.PUBLIC_URL}/images/products/com_vision.svg`} alt=\"computer vision\" />\r\n                        </a>\r\n                    </div>\r\n                </li>\r\n                <li className=\"avatar items-center justify-center relative\">\r\n                    <span>\r\n                        <img src={`${process.env.PUBLIC_URL}/images/avatar.jpg`} alt=\"user-img\" />\r\n                    </span>\r\n                    <button className=\"absolute py-2 inline-flex flex-wrap items-center justify-center\"><img src={`${process.env.PUBLIC_URL}/images/icons/sidebar/logout.svg`} alt=\"logout\" /> Sign Out</button>\r\n                </li>                \r\n            </ul>\r\n            <Tooltip id=\"sidebarTooltip\" place=\"right\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import \"./Breadcrumb.css\";\r\nimport {HiChevronRight} from \"react-icons/hi2\"\r\n\r\nconst Breadcrumb = (props) => {\r\n    const breadcrumb = props.data;\r\n    return (\r\n        <ul className=\"breadcrumb flex flex-wrap list-none items-center mb-10\">\r\n            {breadcrumb.map((lee, index)=>{\r\n                return (\r\n                    <li key={index} className={lee.current ? \"inline-flex flex-wrap current\" : \"inline-flex flex-wrap\"}><img src={lee.img} alt={lee.title} /> {lee.title} {!lee.current && <HiChevronRight />}</li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Breadcrumb;","import React, { useState, useRef, useEffect, useMemo, useCallback, memo} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AgGridReact } from 'ag-grid-react'; // the AG Grid React Component\r\n\r\nimport 'ag-grid-community/styles/ag-grid.css'; // Core grid CSS, always needed\r\nimport 'ag-grid-community/styles/ag-theme-alpine.css'; // Optional theme CSS\r\n\r\n\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport {HiChevronRight} from \"react-icons/hi2\";\r\nimport \"./ScenarioModelsTable.css\";\r\n\r\nconst ScenarioModelsTable = () => {\r\n  \r\n    const gridRef = useRef(null); // Optional - for accessing Grid's API\r\n\r\n    // const rowRefs = useRef({});\r\n\r\n    const [rowData, setRowData] = useState([\r\n      {        \r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Amanda Ali\",\r\n        progress: \"90%\"\r\n      },\r\n      {\r\n        name: \"Construction\",\r\n        status: \"Updated needed\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Jase pasey\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Nuclear plant\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Shoaib Muner\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Wajahat Saleem\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Nuclear plant\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Shoaib Muner\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Wajahat Saleem\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Wajahat Saleem\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Nuclear plant\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Shoaib Muner\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Wajahat Saleem\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Wajahat Saleem\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Nuclear plant\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Shoaib Muner\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Wajahat Saleem\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Wajahat Saleem\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Nuclear plant\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Shoaib Muner\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Wajahat Saleem\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Wajahat Saleem\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Nuclear plant\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Shoaib Muner\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Wajahat Saleem\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Wajahat Saleem\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Nuclear plant\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Shoaib Muner\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Wajahat Saleem\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Chemical Plant Scenario\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Wajahat Saleem\",\r\n        progress: \"100%\"\r\n      },\r\n      {\r\n        name: \"Nuclear plant\",\r\n        status: \"Updated\",\r\n        description: \"No description\",\r\n        created: \"01/01/1980\",\r\n        assigned_to: \"Shoaib Muner\",\r\n        progress: \"100%\"\r\n      }\r\n    ]); // Set rowData to Array of Objects, one Object per Row\r\n\r\n\r\n    const nameFormatRenderer = (params) => {\r\n      const proj_name = params.data.name;\r\n      if (proj_name.toLowerCase().includes(\"chemical\")){\r\n        return <Link to={`/${proj_name}`}><span className='pro_name flex flex-wrap items-center text-primary'><HiChevronRight /> <img src=\"./images/icons/scenarioModels/cps.svg\" alt=\"chemical\" /> {proj_name}</span></Link>;\r\n      } else if (proj_name.toLowerCase().includes(\"construction\")){\r\n        return <Link to={`/${proj_name}`}><span className='pro_name flex flex-wrap items-center text-primary'><HiChevronRight /> <img src=\"./images/icons/scenarioModels/construction.svg\" alt=\"construction\" /> {proj_name}</span></Link>;\r\n      } else if (proj_name.toLowerCase().includes(\"nuclear\")){\r\n        return <Link to={`/${proj_name}`}><span className='pro_name flex flex-wrap items-center text-primary'><HiChevronRight /> <img src=\"./images/icons/scenarioModels/nuclear.svg\" alt=\"nuclear\" /> {proj_name}</span></Link>;\r\n      } else {\r\n        return <Link to={`/${proj_name}`}><span className='pro_name flex flex-wrap items-center text-primary'><HiChevronRight /> {proj_name}</span></Link>;\r\n      }\r\n    }\r\n\r\n    const statusFormatRenderer = (params) => {\r\n      const status = params.data.status.toLowerCase();\r\n      let badgeClass = \"\";\r\n      if(status.includes(\"needed\")) {\r\n        badgeClass = \"badge-danger\"\r\n      } else {\r\n        badgeClass = \"badge-success\"\r\n      }\r\n      return <span className={`badge ${badgeClass}`}>{params.data.status}</span>;\r\n    }\r\n\r\n    const assingneeFormatRenderer = (params) => {\r\n      const name =  params.data.assigned_to;\r\n      const names = name.split(\" \")\r\n      const firstLetter = names[0].charAt(0).toUpperCase();\r\n      const secondLetter = names[1].charAt(0).toUpperCase();\r\n      return <div className='assignee flex flex-wrap items-center text-primary'><span className=\"shrt_name inline-flex items-center justify-center font-bold rounded-2xl\">{firstLetter}{secondLetter}</span>{name}</div>;\r\n    }\r\n    \r\n    // const handleActionBtnClick = (row) => {\r\n    //   console.log(row);\r\n    // };\r\n\r\n    const actionBtnRenderer = (params) => (\r\n      <button className='text-primary text-20' onClick={() => console.log(params.data)}><BsThreeDotsVertical /></button>\r\n    );\r\n\r\n\r\n    // Each Column Definition results in one Column.\r\n    const [columnDefs, setColumnDefs] = useState([\r\n      {\r\n        field: 'name',\r\n        headerName: 'Name',\r\n        width: 200,\r\n        cellRenderer: 'nameFormatRenderer',\r\n      },\r\n      { field: 'status', headerName: 'Statuses', cellRenderer: 'statusFormatRenderer', },\r\n      { field: 'description', headerName: 'Description' },\r\n      { field: 'created', headerName: 'Created' },\r\n      { field: 'assigned_to', headerName: 'Assigned to', cellRenderer: 'assingneeFormatRenderer', },\r\n      { field: 'progress', headerName: 'Progress', width: 150 },\r\n      {\r\n        headerName: '',\r\n        width: 80,\r\n        cellRenderer: 'actionBtnRenderer',\r\n        cellStyle: {\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        },\r\n      },\r\n    ]);\r\n\r\n    // const frameworkComponents = {\r\n    //   buttonCellRenderer: buttonCellRenderer,\r\n    // };\r\n\r\n    const getRowStyle = (params) => {\r\n      const defaultStyle = window.getComputedStyle(params.node.rowDom);\r\n      const defaultTransform = defaultStyle.transform;\r\n      const additionalTransform = 'translateX(8px)'; // Add your additional transformation here\r\n      const updatedTransform = `${defaultTransform} ${additionalTransform}`;\r\n      return { transform: updatedTransform };\r\n    };\r\n\r\n    const components = useMemo(() => {\r\n      return {\r\n        nameFormatRenderer: nameFormatRenderer,\r\n        statusFormatRenderer: statusFormatRenderer,\r\n        assingneeFormatRenderer: assingneeFormatRenderer,\r\n        actionBtnRenderer: actionBtnRenderer,\r\n      };\r\n    }, []);\r\n\r\n    // DefaultColDef sets props common to all Columns\r\n    const defaultColDef = useMemo( ()=> ({\r\n      sortable: true,\r\n      autoHeight: true\r\n    }));\r\n\r\n    // const onFirstDataRendered = () => {\r\n    //   const gridRows = document.querySelectorAll('.ag-body .ag-row');\r\n    //   gridRows.forEach((row) => {\r\n    //     const rowId = row.getAttribute('row-id');\r\n    //     if (rowId) {\r\n    //       rowRefs.current[rowId] = row;\r\n    //       row.style.transform += 10; // Add your additional transformation here\r\n    //       console.log(row.style.transform)\r\n    //     }\r\n    //   });\r\n    // };\r\n\r\n    const onGridReady = (params) => {\r\n      const { api } = params;\r\n      api.sizeColumnsToFit();\r\n      // api.forEachNode((node) => {\r\n      //   const rowId = node.id;\r\n      //   const rowElement = params.api.getRowNode(rowId).rowElement;\r\n      //   rowRefs.current[rowId] = rowElement;\r\n      // });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"ag-theme-alpine\" style={{ height: '100vh', width: '100%' }}>\r\n\r\n          <AgGridReact\r\n              ref={gridRef} // Ref for accessing Grid's API\r\n              rowData={rowData} // Row Data for Rows\r\n              columnDefs={columnDefs} // Column Defs for Columns\r\n              defaultColDef={defaultColDef} // Default Column Properties\r\n              headerHeight={50}\r\n              components={components}\r\n              animateRows={true} // Optional - set to 'true' to have rows animate when sorted\r\n              rowSelection='multiple' // Options - allows click selection of rows\r\n              // onFirstDataRendered={onFirstDataRendered}\r\n              onGridReady={onGridReady}\r\n              />\r\n        </div>\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default memo(ScenarioModelsTable);\r\n","// import { Logo } from \"./images/products/projectManager.svg\"\r\nimport { useState, useCallback } from \"react\";\r\nimport Sidebar from \"../components/Sidebar/Sidebar\";\r\nimport Breadcrumb from \"../components/UI/Breadcrumb\";\r\nimport ScenarioModelsTable from \"../components/ScenarioPlanning/ScenarioModelsTable\";\r\nimport \"../components/UI/Dropdown.css\";\r\nimport \"./ScenarioPlanning.css\";\r\nimport \"../components/UI/DataGridCustomTheme.css\"\r\n\r\n\r\nconst ScenarioPlanning = (props) => {\r\n    console.log(\"run\")\r\n    const [dd_visible, setdd_visible] = useState(false);\r\n    // const dropdownBtnClickHandler = () => {\r\n    //     setdd_visible(!dd_visible)\r\n    // }\r\n    const dropdownBtnClickHandler = useCallback(() => {\r\n        setdd_visible((prevVisible) => !prevVisible);\r\n      }, []);\r\n    const breadcrumb = [\r\n        {\r\n            \"title\": \"Project Manager\",\r\n            \"img\": `${process.env.PUBLIC_URL}/images/products/projectManager.svg`\r\n        },\r\n        {\r\n            \"title\": \"Scenario building\",\r\n            \"img\": `${process.env.PUBLIC_URL}/images/icons/breadcrumb/scenario_building.svg`,\r\n            \"current\": true\r\n        }\r\n    ];\r\n\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Sidebar logo={`${process.env.PUBLIC_URL}/images/products/projectManager.svg`} screenIcon={`${process.env.PUBLIC_URL}/images/icons/scenarioPlanning.svg`}></Sidebar>\r\n            <div className=\"content\">\r\n                <Breadcrumb data={breadcrumb} />\r\n                {/* Page content <start> */}\r\n                <div className=\"title flex flex-wrap justify-between mb-6\">\r\n                    <h1 className=\"font-microgramma text-black text-20\">Scenario Models</h1>\r\n                    <div className=\"dropdown\">\r\n                        <button onClick={dropdownBtnClickHandler} className=\"dd-button flex flex-wrap gap-x-2 text-primary font-bold items-center\"><img src=\"./images/icons/plus.svg\" alt=\"add\" /> New Model</button>\r\n                        <div className={dd_visible ? \"dd-menu show\" : \"dd-menu\"}>\r\n                            <label htmlFor=\"CostScenario\">\r\n                                <input id=\"CostScenario\" type=\"checkbox\" /> <img src=\"./images/icons/scenarioModels/cps.svg\" alt=\"cps\" /> Cost Scenario\r\n                            </label>\r\n                            <label htmlFor=\"Schedule\">\r\n                                <input id=\"Schedule\" type=\"checkbox\" /> <img src=\"./images/icons/scenarioModels/construction.svg\" alt=\"construction\" /> Schedule\r\n                            </label>\r\n                            <label htmlFor=\"RiskScenario\">\r\n                                <input id=\"RiskScenario\" type=\"checkbox\" /> <img src=\"./images/icons/scenarioModels/nuclear.svg\" alt=\"nuclear\" /> Risk Scenario\r\n                            </label>\r\n                            <button className=\"btn doneBtn\" onClick={dropdownBtnClickHandler}>Done</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ScenarioModelsTable />\r\n                {/* Page content <end> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScenarioPlanning;"],"names":["props","gridVisibility","_jsxs","className","children","_jsx","src","logo","alt","AiOutlineSearch","id","type","placeholder","screenIcon","comparatorAndGant","Fragment","onClick","concat","process","href","title","Tooltip","place","breadcrumb","data","map","lee","index","current","img","HiChevronRight","ScenarioModelsTable","gridRef","useRef","_useState","useState","name","status","description","created","assigned_to","progress","_useState2","_slicedToArray","rowData","nameFormatRenderer","params","proj_name","toLowerCase","includes","Link","to","statusFormatRenderer","badgeClass","assingneeFormatRenderer","names","split","firstLetter","charAt","toUpperCase","secondLetter","actionBtnRenderer","console","log","BsThreeDotsVertical","_useState3","field","headerName","width","cellRenderer","cellStyle","display","alignItems","justifyContent","_useState4","columnDefs","components","useMemo","defaultColDef","sortable","autoHeight","style","height","AgGridReact","ref","headerHeight","animateRows","rowSelection","onGridReady","api","sizeColumnsToFit","memo","dd_visible","setdd_visible","dropdownBtnClickHandler","useCallback","prevVisible","Sidebar","Breadcrumb","htmlFor"],"sourceRoot":""}